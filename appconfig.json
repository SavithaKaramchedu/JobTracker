{
  "servicename": "sampleservice",
  "routes": [
    {
      "route": "/images",
      "type": "static",
      "configured": true,
      "routeclass": "./images",
      "description": "app specific images are served from the directory ./images under route /images"
    },
    {
      "route": "/login",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getLoginPage",
      "description": "Routes to initial page of the web application to login",
      "examples": [
        {
          "param": "/"
        }
      ]
    },
    {
      "route": "/validate",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "validateLogin",
      "description": "Authentication route for the user",
      "examples": [
        {
          "param": "/validate"
        }
      ]
    },
    {
      "route": "/home",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getHomePage",
      "description": "Routes to the main page of the web application",
      "examples": [
        {
          "param": "/home"
        }
      ]
    },
    {
      "route": "/logout",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getBackPage",
      "description": "Route for logging out from application",
      "examples": [
        {
          "param": "/logout"
        }
      ]
    },
    {
      "route": "/leads",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getLeadPage",
      "description": "Route for listing all the leads available",
      "examples": [
        {
          "param": "/leads"
        }
      ]
    },
    {
      "route": "/leads/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "recorddisplaylead",
      "description": "Routes to display record value in leadmodal",
      "examples": [
        {
          "param": "/leads/:i"
        }
      ]
    },
    {
      "route": "/statusdropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "statusdropdownfun",
      "description": "Routes to get the dropdown value in leadmodal",
      "examples": [
        {
          "param": "/statusdropdownfun"
        }
      ]
    },
    {
      "route": "/qualidropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "qualidropdownfun",
      "description": "Routes to get the dropdown value in leadmodal",
      "examples": [
        {
          "param": "/qualidropdownfun"
        }
      ]
    },
    {
      "route": "/priodropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "priodropdownfun",
      "description": "Routes to get the dropdownss value in leadmodal",
      "examples": [
        {
          "param": "/priodropdownfun"
        }
      ]
    },
    {
      "route": "/catdropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "catdropdownfun",
      "description": "Routes to get the dropdown value in leadmodal",
      "examples": [
        {
          "param": "/catdropdownfun"
        }
      ]
    },
    {
      "route": "/sourdropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "sourdropdownfun",
      "description": "Routes to get the source dropdown value in leadmodal",
      "examples": [
        {
          "param": "/sourdropdownfun"
        }
      ]
    },
    {
      "route": "/leads/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updateleadrecord",
      "description": "Routes to update record value in table",
      "examples": [
        {
          "param": "/leads/:i"
        }
      ]
    },
    {
      "route": "/leads/:i",
      "type": "delete",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteleadrecord",
      "description": "Delete leadrecord details choosen",
      "examples": [
        {
          "param": "/leads/:i"
        }
      ]
    },
    {
      "route": "/deleteleaddisplay/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteleaddisplay",
      "description": "Routes to delete recordin leadmodal",
      "examples": [
        {
          "param": "/deleteleaddisplay/:i"
        }
      ]
    },
    {
      "route": "/employees",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getEmpPage",
      "description": "Route for listing all the active employees",
      "examples": [
        {
          "param": "/employees"
        }
      ]
    },
    {
      "route": "/contact",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "ContactPage",
      "description": "Route for listing all the active Contacts",
      "examples": [
        {
          "param": "/contact"
        }
      ]
    },
    {
      "route": "/contact/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "recorddisplaycont",
      "description": "Route to display record value in modal",
      "examples": [
        {
          "param": "/contact/:i"
        }
      ]
    },
    {
      "route": "/contact/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updatereccontact",
      "description": "Route to update record value in table",
      "examples": [
        {
          "param": "/contact/:i"
        }
      ]
    },
    {
      "route": "/contact/:i",
      "type": "delete",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deletecont",
      "description": "Delete contact details choosen",
      "examples": [
        {
          "param": "/contact/:i"
        }
      ]
    },
    {
      "route": "/delete/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deletedisplaycont",
      "description": "Routes to display record value in modal",
      "examples": [
        {
          "param": "/contact/:i"
        }
      ]
    },
    {
      "route": "/account",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getAccountPage",
      "description": "Route for listing all the active accounts",
      "examples": [
        {
          "param": "/account"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "recorddisplay",
      "description": "Routes to display record value in modal",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updateaccount",
      "description": "Routes to update record value in table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/account/:i",
      "type": "delete",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteaccount",
      "description": "Routes to delete record value in table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/deleteacc/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deletedisplayaccount",
      "description": "Routes to display id of an record in hidden",
      "examples": [
        {
          "param": "/deleteacc/:i"
        }
      ]
    },
    {
      "route": "/updateaccaddress/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updateaccaddress",


      "description": "Routes to update address of account",
      "examples": [
        {
          "param": "/updteaccaddress/:i"
        }
      ]
    },
   

    {
      "route": "/opportunity",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getOpportunityPage",
      "description": "Route for listing all the available opportunities",
      "examples": [
        {
          "param": "/opportunity"
        }
      ]
    },
    {
      "route": "/opportunity/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "opportunitydisplay",
      "description": "Routes to display record value in modal",
      "examples": [
        {
          "param": "/opportunity/:i"
        }
      ]
    },
    {
      "route": "/opportunity/:i",
      "type": "put",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updateOpportunity",
      "description": "Routes to update record value in table",
      "examples": [
        {
          "param": "/opportunity/:i"
        }
      ]
    },
    {
      "route": "/opportunity/:i",
      "type": "delete",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteopportunity",
      "description": "Delete  record value in table",
      "examples": [
        {
          "param": "/opportunity/:i"
        }
      ]
    },
    {
      "route": "/deleteopp/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deletedisplay",
      "description": "Delete  record value in table hidden",
      "examples": [
        {
          "param": "/deleteopp/:i"
        }
      ]
    },
    {
      "route": "/sourceopp",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "sourceoppo",
      "description": "source dropdown dynamically",
      "examples": [
        {
          "param": "/sourceopp"
        }
      ]
    },
    {
      "route": "/SalesCycle",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "SalesCycle",
      "description": "SalesCycle dropdown dynamically LTTS",
      "examples": [
        {
          "param": "/SalesCycle"
        }
      ]
    },
    {
      "route": "/Salesphase",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Salesphase",
      "description": "Salesphase dropdown dynamically",
      "examples": [
        {
          "param": "/Salesphase"
        }
      ]
    },
    {
      "route": "/oppcategory",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Category",
      "description": "Category dropdown dynamically",
      "examples": [
        {
          "param": "/oppcategory"
        }
      ]
    },
    {
      "route": "/OpportunityType",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "oppotype",
      "description": "Opportunity Type dropdown dynamically",
      "examples": [
        {
          "param": "/OpportunityType"
        }
      ]
    },
    {
      "route": "/OpportunityStatus",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "oppostatus",
      "description": "OpportunityStatus dropdown dynamically",
      "examples": [
        {
          "param": "/OpportunityStatus"
        }
      ]
    },
    {
      "route": "/SalesOrganization",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "salesorg",
      "description": "SalesOrganization dropdown dynamically",
      "examples": [
        {
          "param": "/SalesOrganization "
        }
      ]
    },
    {
      "route": "/Salesunit",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "salesuni",
      "description": "Salesunit dropdown dynamically",
      "examples": [
        {
          "param": "/Salesunit"
        }
      ]
    },
    {
      "route": "/Salesoffice",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "salesoff",
      "description": "Salesoffice dropdown dynamically",
      "examples": [
        {
          "param": "/Salesoffice"
        }
      ]
    },
    {
      "route": "/CustomCategory",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "customcat",
      "description": "CustomCategory : dropdown dynamically",
      "examples": [
        {
          "param": "/CustomCategory"
        }
      ]
    },
    {
      "route": "/contact",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addContactPage",
      "description": "Route for creation of new contact",
      "examples": [
        {
          "param": "/contact",
          "payload": {
            "firstname": "savitha",
            "lastname": "karamchedu",
            "account": "accountname",
            "jobtitle": "software developer",
            "function1": "function1_name",
            "department": "department1",
            "phone": "(123)456-1234",
            "city": "Bangalore",
            "fax": "(123)456-1234",
            "mobile": "(123)456-1234",
            "email": "savitha.karamchedu@ltts.com"
          }
        }
      ]
    },
    {
      "route": "/account",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addAccountPage",
      "description": "Route for creation of new account",
      "bodyschema": {
        "type": "object",
        "required": [
          "name",
          "prospect",
          "parentaccount",
          "website",
          "accountcategory",
          "vertical",
          "country",
          "city",
          "state",
          "owner"
        ],
        "properties": {
          "name": {
            "description": "Name",
            "type": "string"
          },
          "prospect": {
            "description": "Prospect",
            "type": "string"
          },
          "parentaccount": {
            "description": "Parent account",
            "type": "string"
          },
          "website": {
            "description": "Website",
            "type": "string"
          },
          "accountcategory": {
            "description": "Account Category",
            "type": "string"
          },
          "vertical": {
            "description": "Vertical",
            "type": "string"
          },
          "country": {
            "description": "Country",
            "type": "string",
            "minLength": 3
          },
          "city": {
            "description": "City",
            "type": "string"
          },
          "state": {
            "description": "Fax number",
            "type": "string",
            "minLength": 3
          },
          "owner": {
            "description": "Owner of the Account",
            "type": "string"
          }
        }
      },
      "examples": [
        {
          "param": "/account",
          "payload": {
            "name": "Google india",
            "prospect": "yes",
            "parentaccount": "Goolge",
            "website": "www.google.com",
            "accountcategory": "Paltinum",
            "vertical": "ISV",
            "country": "India",
            "city": "Hyderabad",
            "state": "Telangana",
            "owner": "Arpit Bhaderia"
          }
        }
      ]
    },
    {
      "route": "/addopportunity",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addOpportunity",
      "description": "Route for creation of new opportunity",
      "examples": [
        {
          "param": "/opportunity"
        }
      ]
    },
    {
      "route": "/leads",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addLead",
      "description": "Route for creation of new lead",
      "bodyschema": {
        "type": "object",
        "required": [
          "title",
          "company",
          "leadcontid",
          "status",
          "qul",
          "source",
          "category",
          "priority",
          "owner",
          "leadnotes"
        ]
      },
      "examples": [
        {
          "param": "/leads",
          "payload": {
            "title": "Lead 1",
            "company": "LTTS",
            "firstname": "Arpit",
            "lastname": "Bhaderia",
            "status": "Accepted",
            "qul": "Cold",
            "source": "Campaign",
            "category": "Consulting",
            "priority": "Immedaite",
            "owner": "Arpit"
          }
        }
      ]
    },
    {
      "route": "/edit/:id",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "editLeadPage",
      "description": "Get details of lead to be edited",
      "examples": [
        {
          "param": "/edit/:id"
        }
      ]
    },
    {
      "route": "/edit/:id",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "editLead",
      "description": "Edit lead choosen",
      "examples": [
        {
          "param": "/edit/:id"
        }
      ]
    },
    {
      "route": "/delete/:id",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "deleteLead",
      "description": "Delete specific lead details choosen",
      "examples": [
        {
          "param": "/delete/:id"
        }
      ]
    },
    {
      "route": "/sampleservice/something/:value1/:value2",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "RouteGetSomething",
      "description": "Hello world",
      "examples": [
        {
          "param": "/sampleservice/something/ltts/11"
        }
      ],
      "paramschema": {
        "type": "object",
        "required": [
          "value1",
          "value2"
        ],
        "properties": {
          "value1": {
            "description": "value1 is string e.g. foo",
            "type": "string",
            "minLength": 4,
            "maxLength": 6
          },
          "value2": {
            "description": "value2 is number e.g. 100",
            "type": "integer",
            "minimum": 10,
            "maximum": 15
          }
        }
      }
    },
    {
      "route": "/sampleservice/something/:value1/:value2",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "RoutePostSomething",
      "description": "Hello world",
      "examples": [
        {
          "param": "/sampleservice/something/foo/100",
          "payload": {
            "value3": {
              "value5": "bar"
            },
            "value4": "blah"
          }
        }
      ],
      "paramschema": {
        "type": "object",
        "required": [
          "value1",
          "value2"
        ],
        "properties": {
          "value1": {
            "description": "value1 is string e.g. foo",
            "type": "string"
          },
          "value2": {
            "description": "value2 is number e.g. 100",
            "type": "integer"
          }
        }
      },
      "bodyschema": {
        "type": "object",
        "required": [
          "value3",
          "value4"
        ],
        "properties": {
          "value3": {
            "description": "value3 is an object e.g. {'value5':'bar'}",
            "type": "object",
            "required": [
              "value5"
            ],
            "properties": {
              "value5": {
                "description": "value5 is a string inside the value3 object e.g. bar",
                "type": "string"
              }
            }
          },
          "value4": {
            "description": "value4 is string e.g. blah",
            "type": "string"
          }
        }
      }
    },
    {
      "route": "/dropdownfun",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactfun",
      "description": "Route for dynamic dropdown function",
      "examples": [
        {
          "param": "/fundropdown"
        }
      ]
    },
    {
      "route": "/dropdowndep",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactdep",
      "description": "Route for dynamic dropdown department",
      "examples": [
        {
          "param": "/depdropdown"
        }
      ]
    },
    {
      "route": "/dropdownacademictitles",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactacademictitles",
      "description": "Route for dynamic dropdown academictitles",
      "examples": [
        {
          "param": "/academictitlesdropdown"
        }
      ]
    },
    {
      "route": "/dropdownsalutations",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactsalutations",
      "description": "Route for dynamic dropdown salutations",
      "examples": [
        {
          "param": "/salutationsdropdown"
        }
      ]
    },
    {
      "route": "/dropdownbestreachedby",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactbestreachedby",
      "description": "Route for dynamic dropdown bestreachedby",
      "examples": [
        {
          "param": "/bestreachedbydropdown"
        }
      ]
    },
    {
      "route": "/dropdowncontpermission",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "Contactcontpermission",
      "description": "Route for dynamic dropdown contpermission",
      "examples": [
        {
          "param": "/contpermissiondropdown"
        }
      ]
    },
    {
      "route": "/contactaccounts",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "ContactAccounts",
      "description": "Routes to display dynamic accounts in new contact modal ",
      "examples": [
        {
          "param": "/contactaccounts"
        }
      ]
    },
    {
      "route": "/acccat",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accountcat",
      "description": "Routes to display values dynamically inside category dropdown",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/accvert",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accountvert",
      "description": "Routes to display values dynamically inside vertical dropdown",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/accsalereg",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accountsalesregion",
      "description": "Routes to display values dynamically inside vertical dropdown",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/acccont",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accountcont",
      "description": "Routes to display values dynamically inside country dropdown",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/accstate/:country",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accountstate",
      "description": "Routes to display values dynamically inside state dropdown based on country",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/parentacc",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accparent",
      "description": "Routes to display values dynamically inside parrent account table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/owneracc",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accowner",
      "description": "Routes to display values dynamically inside owner account table",
      "examples": [
        {
          "param": "/account/:i"
        }
      ]
    },
    {
      "route": "/accaddress",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "accaddress",
      "description": "Routes to insert address of account",
      "examples": [
        {
          "param": "/accaddress"
        }
      ]
    },
    {
      "route": "/insertcontactaccount",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "insertcontactaccount",
      "description": "Route to insert contactaccounts in new contact modal",
      "examples": [
        {
          "param": "/insertcontactaccount"
        }
      ]
    },
    {
      "route": "/contactphone",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "contactphone",
      "description": "Route to insert phone",
      "examples": [
        {
          "param": "/contactphone"
        }
      ]
    },
    
    {
      "route": "/updatecontphone",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updatecontphone",
      "description": "Route to update phone",
      "examples": [
        {
          "param": "/updatecontphone"
        }
      ]
    },
    {
      "route": "/updatecontemail",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "updatecontemail",
      "description": "Route to update email in contact",
      "examples": [
        {
          "param": "/updatecontemail"
        }
      ]
    },
    {
      "route": "/addleadcompany",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addleadcompany",
      "description": "Route for creation of new lead",
      "bodyschema": {
        "type": "object",
        "required": [
          "company"
        ],
        "properties": {
          "company": {
            "description": "Company name",
            "type": "string"
          }
        }
      },
      "examples": [
        {
          "param": "/addleadcompany",
          "payload": {
            "company": "LTTS"
          }
        }
      ]
    },
    {
      "route": "/contactemail",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "contactemail",
      "description": "Route to insert email",
      "examples": [
        {
          "param": "/contactemail"
        }
      ]
    },
    {
      "route": "/business",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "BusinessPage",
      "description": "Route for listing all the active Businesspartners",
      "examples": [
        {
          "param": "/business"
        }
      ]
    },
    {
      "route": "/serviceoffering",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getServiceoffering",
      "description": "Route for listing all the active Businesspartners",
      "examples": [
        {
          "param": "/serviceoffering"
        }
      ]
    },
    {
      "route": "/bu",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getbu",
      "description": "Route for Business unit look up",
      "examples": [
        {
          "param": "/bu"
        }
      ]
    },
    {
      "route": "/Location",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getlocation",
      "description": "Route for Location look up",
      "examples": [
        {
          "param": "/Location"
        }
      ]
    },
    {
      "route": "/engagmentType",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getengagmentType",
      "description": "Route for engagment type look up",
      "examples": [
        {
          "param": "/engagmentType"
        }
      ]
    },
    {
      "route": "/UOM",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getUOM",
      "description": "Route for UOM look up",
      "examples": [
        {
          "param": "/UOM"
        }
      ]
    },
    {
      "route": "/VerticalByBu/:buid",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getVerticalByBu",
      "description": "Route for Vertical look up",
      "examples": [
        {
          "param": "/VerticalByBu/:buid"
        }
      ]
    },
    {
      "route": "/PortfolioByBu/:buid",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getPortfolioByBu",
      "description": "Route for Portfolio look up",
      "examples": [
        {
          "param": "/VerticalByBu/:buid"
        }
      ]
    },
    {
      "route": "/so/:pid",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "getSo",
      "description": "Route for Service offerings look up",
      "examples": [
        {
          "param": "/so/:pid"
        }
      ]
    },
    {
      "route": "/serviceoffering",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addServiceoffering",
      "description": "Route for Service offerings look up",
      "examples": [
        {
          "param": "/serviceoffering"
        }
      ]
    },
    {
      "route": "/serviceoffdis/:i",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "serviceOfferingdisplay",
      "description": "Route for listing all the active Businesspartners",
      "examples": [
        {
          "param": "/serviceOfferingdisplay"
        }
      ]
    },
    {
      "route": "/revenueresource",
      "type": "get",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "RevenueResourcePage",
      "description": "Route for listing all the active Revenue & Resource Forecast",
      "examples": [
        {
          "param": "/revenueresource"
        }
      ]
    },
    {
      "route": "/addcontactinfo",
      "type": "post",
      "configured": true,
      "routeclass": "./sampleservice.js",
      "routefunction": "addcontactinfo",
      "description": "Route for creation of new lead",
      "bodyschema": {
        "type": "object",
        "required": [
          "contfname",
          "contlname"
        ],
        "properties": {
          "company": {
            "description": "contactinfo  names",
            "type": "string"
          }
        }
      },
      "examples": [
        {
          "param": "/addcontactinfo",
          "payload": {
            "company": "LTTS"
          }
        }
      ]
    }
  ]
}